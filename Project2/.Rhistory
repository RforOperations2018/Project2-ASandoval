shiny::runApp()
shiny::runApp()
runApp()
runApp()
require(rgdal)
require(leaflet)
require(leaflet.extras)
require(dplyr)
require(readxl)
require(stringr)
# 2018 Philadelphia Marathon Route
# This data was created from http://geojson.io/#map=2/20.0/0.0.
# Point and line data was traced from the 2018 Philadelphia marathon website, https://philadelphiamarathon.phila.gov/#/
# Neighborhoods were downloaded from https://github.com/azavea/geo-data
# Upload polylines, polypoints, and polygons
route <- readOGR("marathon.geojson")
plot(route)
markers <- readOGR("finalmarkers.geojson")
plot(markers)
hoods <- readOGR("Neighborhoods_Philadelphia.geojson")
plot(hoods)
# Add an if else statement to change colors of the markers
getColor <- function(markers) {
sapply(markers$marker.symbol, function(marker.symbol) {
if(marker.symbol %in% "S") {
"green"
} else if(marker.symbol %in% "F") {
"red"
} else {
"orange"
} })
}
# Add icons
icons <- awesomeIcons(
text = ~as.character(marker.symbol),
markerColor = getColor(markers)
)
# Choose Icon Legend
html_legend <- "Philadelphia Marathon 2018 Route <br/> <br/> <img src='https://png.icons8.com/material-outlined/50/000000/marker.png'>Mile Markers "
# Plot map
leaflet() %>%
# Add Philly 2018 Marathon Route
addPolylines(data = route, color = "#000000", fillOpacity = 1, weight = 10) %>%
# Add Philly Neighborhoods
addPolygons(data = hoods, color = "#1ab2ff", label = ~mapname, fillOpacity = 0.00, weight = 3, highlightOptions = highlightOptions(color = "red", bringToFront = TRUE)) %>%
# Add Philly 2018 Mile Markers
addAwesomeMarkers(data = markers, icon = icons, label = ~as.character(marker.symbol)) %>%
# Add Basemaps
addProviderTiles(providers$OpenMapSurfer.Grayscale, options = providerTileOptions(noWrap = TRUE)) %>%
addTiles(options = providerTileOptions(noWrap = TRUE), group = "Default") %>%
addProviderTiles("Esri.WorldImagery", options = providerTileOptions(noWrap = TRUE), group = "Imagery") %>%
addProviderTiles("Esri.WorldTerrain", options = providerTileOptions(noWrap = TRUE), group = "Terrain") %>%
# Add Layers control
addLayersControl(
baseGroups = c("Default", "Imagery", "Terrain"),
options = layersControlOptions(collapsed = FALSE)
) %>%
# Set View
setView( lat = 39.980379,  lng= -75.165490, zoom = 12.1) %>%
# Add Legend
addControl(html_legend, position = "bottomleft")
